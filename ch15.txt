npm i sanitize-html
npm i csurf
두 패키지는 각각 XSS,CSRF 공격을 막기위한 ㅍ ㅐ키지

const sanitizeHtml = require('sanitize-html');

const html="<script>location.href = 'https://gilbut.co.kr'</script>;
console.log(sanitizeHtml(html));
사용자가 업로드한 HTML을 sanitize-html 함수로 감싸면 허용하지 않는 태그나 스크립트는 제거됨
두 번째 인수로 허용할 부분에 옵션을 넣을 수 있음. 옵션은 공식문서 참조.

CSRF토큰=내가 한 행동이 내가 한 것이 맞다는 것을 인증하는데 사용됨
csurf패키지는 이 토큰을 쉽게 발급하거나 검증가능

const crsf = require('csurf');
const csrProtection =csrf({cookie:true});

app.get('/form',csrProtection,(req,res)=>{
    res.render('csrf',{csrfToken:req.csrfToken()});
});
이렇게 렌더링 할 때 CSRF토큰을 같이 제공함
현재 쿠키를 사용하는 것으로 옵션을 설정했음. cookie-parser 패키지도 연결되어 있어야 함
토큰은 req.csrfToken()으로 가져올 수 있음
app.post('/form',csrProtection,(req,res)=>{
    res.send('ok');
})

pm2패키지->개발할땐 nodemon을 쓴다면 pm2는 배포할 때 많이 씀
기능으로는 서버가 에러로 꺼졌을 때 다시 켜줌
pm2를 사용하여 프로세스를 여러개 만들면 다른 코어들도 사용가능->부하감소
단점으로는 멀티 스레딩이 아니므로 서버의 메모리 같은 자원은 공유가 안됨
지금처럼 세션을 메모리에 저장하면 새로고침을 했을때 다른 프로세스에 배정이 되면 로그인을 이미 했지만
다시하는 그런 상황이 발생함
npx pm2 kill로 죽일 수 있음 npm start로 시작하면 백그라운드에서 서버가 돌아가서 같은 터미널에서
다른 작업들 할 수 있음

 "start": "cross-env NODE_ENV=production PORT=80 pm2 start server.js -i 0"
 -i 0 -> -i뒤에 생성하길 원하는 프로세스 개수를 기입하면 됨. 0은 현재 cpu코어 갯수만큼 생성
 -1은 cpu코어 개수보다 1개적게 생성한다는 뜻
 실제 서버 운영 시에는 서비스 규모가 커질수록 비용이 발생할 가능성 커지니까 놀고있는 코어까지
 클러스터링으로 작동하게 하는 것이 좋음
 단,프로세스 간에 메모리 공유를 못하므로 최대한 프로세스간에 공유하는 것이 없도록 설계해야함
 공유해야하는건 데이터베이스 사용해야함

 npx pm2 monit-> 현재 프로세스를 모니터링 할 수 있음

 winston 패키지-> 실제 서버를 운영할 때 console.log, console.error 사용하기 힘듦
 현재 개발중에는 편리하게 사용가능 하지만 배포시에는 각 객체의 메서드들이 언제 호출되었는지 파악이 힘듦
 서버가 종료되는 순간 로그들도 사라지기 때문에 다 날아가버림
 그래서 로그나 데이터들을 데이터베이스에 저장해야함 이 때 winston을 사용함

 helmet,hpp 패키지-> 서버의 각종 취약점을 보완해주는 패키지들임.익스프레스 미들웨어로서 사용가능
 이 패키지들 이용한다고 해서 모든 취약점 방어는 안되므로 주기적으로 서버 체크해야함
 개발환경에서는 사용할 필요 없으니까 배포시에만 사용

 connect-redis 패키지-> 멀티 프로세스 간 세션 공유를 위해 레디스와 익스프레스를 연결해주는 패키지
 기존의 세션이나 사용자 정보가 메모리에 저장되는데 서버종료되면 모두 날아감 그러므로 데이터 베이스에 저장하는 것
 이 때 사용하는 데이터베이스가 레디스임 다른거 써도 되는데 주로 레디스 사용 메모리 기반으로 해서 성능이 좋음
 서버에 레디스 직접 설치할 수 있지만 호스팅해주는 서비스 쓰기 편해서 그걸 많이 씀->redislabs 

 n 패키지 -> 노드 버전을 업데이트하기 위한 패키지
 sudo npm i -g n